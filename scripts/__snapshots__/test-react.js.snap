// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test React with JSX input, JSX output Class component folding Classes with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Complex class components folding into functional root component #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Complex class components folding into functional root component #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Complex class components folding into functional root component #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 12,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Complex class components folding into functional root component #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Complex class components folding into functional root component 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Inheritance chaining 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "MyComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Simple classes #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Simple classes #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Class component folding Simple classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Factory class component folding Simple factory classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "FactoryComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Factory class component folding Simple factory classes 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "FactoryComponent",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "non-root factory class components are not suppoted",
          "name": "FactoryComponent",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output First render only Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "INLINED",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "INLINED",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 4,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only Replace this in callbacks 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only Replace this in callbacks 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only Simple #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only componentWillMount 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only getDerivedStateFromProps 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only getDerivedStateFromProps 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only getDerivedStateFromProps 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output First render only getDerivedStateFromProps 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding 16.3 refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding 16.3 refs 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding 16.3 refs 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "refs are not supported on <Components />",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Additional functions closure scope capturing 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Circular reference 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Class component as root 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Class component as root with instance variables #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Class component as root with instance variables 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Class component as root with multiple render methods 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Class component as root with props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Class component as root with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Component type change 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Component type same 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Conditional 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "MaybeShow",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Delete element prop key 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Dynamic ReactElement type #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Dynamic ReactElement type 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Dynamic context 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "SubChild",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Dynamic props 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Fn",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Event handlers 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Key change 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Key change with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Key nesting 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Key nesting 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Key nesting 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Key not changing with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding React.cloneElement 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "MaybeShow",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Override",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Render array twice 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Render nested array children 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Return text 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Return undefined 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "undefined was returned from render",
          "name": "A",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 3,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App2",
      "status": "WRITE-CONFLICTS",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple children 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "B",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "C",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with Object.assign #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with Object.assign #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with Object.assign #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with Object.assign #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with Object.assign 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with abstract props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with multiple JSX spreads #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with multiple JSX spreads #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with multiple JSX spreads #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with multiple JSX spreads #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with multiple JSX spreads #6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with multiple JSX spreads 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with new expression 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Functional component folding Simple with unary expressions 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "RENDER_PROPS",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "NORMAL",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props Relay QueryRenderer 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props Relay QueryRenderer 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output Render props Relay QueryRenderer 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SomeClassThatShouldNotMakeRootAClass",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks Function bind 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Middle",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks Hacker News app 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "HeaderBar",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "StoryList",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "AppBody",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "Hello",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "RelayContainer",
          "name": "WrappedApp",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 9,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 11 1`] = `
ReactStatistics {
  "componentsEvaluated": 13,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 9,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks fb-www 13 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, JSX output fb-www mocks repl example 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Foo",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Classes with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Complex class components folding into functional root component #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Complex class components folding into functional root component #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Complex class components folding into functional root component #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 12,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Complex class components folding into functional root component #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Complex class components folding into functional root component 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Inheritance chaining 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "MyComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Simple classes #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Simple classes #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Class component folding Simple classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Factory class component folding Simple factory classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "FactoryComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Factory class component folding Simple factory classes 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "FactoryComponent",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "non-root factory class components are not suppoted",
          "name": "FactoryComponent",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output First render only Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "INLINED",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "INLINED",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 4,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only Replace this in callbacks 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only Replace this in callbacks 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only Simple #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only componentWillMount 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only getDerivedStateFromProps 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only getDerivedStateFromProps 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only getDerivedStateFromProps 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output First render only getDerivedStateFromProps 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding 16.3 refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding 16.3 refs 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding 16.3 refs 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "refs are not supported on <Components />",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Additional functions closure scope capturing 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Circular reference 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Class component as root 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Class component as root with instance variables #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Class component as root with instance variables 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Class component as root with multiple render methods 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Class component as root with props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Class component as root with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Component type change 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Component type same 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Conditional 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "MaybeShow",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Delete element prop key 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Dynamic ReactElement type #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Dynamic ReactElement type 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Dynamic context 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "SubChild",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Dynamic props 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Fn",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Event handlers 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Key change 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Key change with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Key nesting 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Key nesting 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Key nesting 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Key not changing with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding React.cloneElement 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "MaybeShow",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Override",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Render array twice 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Render nested array children 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Return text 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Return undefined 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "undefined was returned from render",
          "name": "A",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 3,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App2",
      "status": "WRITE-CONFLICTS",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple children 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "B",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "C",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with Object.assign #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with Object.assign #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with Object.assign #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with Object.assign #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with Object.assign 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with abstract props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with multiple JSX spreads #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with multiple JSX spreads #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with multiple JSX spreads #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with multiple JSX spreads #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with multiple JSX spreads #6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with multiple JSX spreads 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with new expression 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Functional component folding Simple with unary expressions 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "RENDER_PROPS",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "NORMAL",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props Relay QueryRenderer 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props Relay QueryRenderer 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output Render props Relay QueryRenderer 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SomeClassThatShouldNotMakeRootAClass",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks Function bind 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Middle",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks Hacker News app 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "HeaderBar",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "StoryList",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "AppBody",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "Hello",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "RelayContainer",
          "name": "WrappedApp",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 9,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 11 1`] = `
ReactStatistics {
  "componentsEvaluated": 13,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 9,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks fb-www 13 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with JSX input, create-element output fb-www mocks repl example 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Foo",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Classes with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Complex class components folding into functional root component #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Complex class components folding into functional root component #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Complex class components folding into functional root component #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 12,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Complex class components folding into functional root component #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Complex class components folding into functional root component 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Inheritance chaining 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "MyComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Simple classes #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Simple classes #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Class component folding Simple classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Factory class component folding Simple factory classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "FactoryComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Factory class component folding Simple factory classes 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "FactoryComponent",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "non-root factory class components are not suppoted",
          "name": "FactoryComponent",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output First render only Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "INLINED",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "INLINED",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 4,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only Replace this in callbacks 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only Replace this in callbacks 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only Simple #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only componentWillMount 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only getDerivedStateFromProps 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only getDerivedStateFromProps 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only getDerivedStateFromProps 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output First render only getDerivedStateFromProps 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding 16.3 refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding 16.3 refs 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding 16.3 refs 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "refs are not supported on <Components />",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Additional functions closure scope capturing 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Circular reference 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Class component as root 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Class component as root with instance variables #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Class component as root with instance variables 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Class component as root with multiple render methods 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Class component as root with props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Class component as root with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Component type change 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Component type same 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Conditional 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "MaybeShow",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Delete element prop key 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Dynamic ReactElement type #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Dynamic ReactElement type 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Dynamic context 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "SubChild",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Dynamic props 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Fn",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Event handlers 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Key change 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Key change with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Key nesting 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Key nesting 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Key nesting 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Key not changing with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding React.cloneElement 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "MaybeShow",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Override",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Render array twice 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Render nested array children 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Return text 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Return undefined 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "undefined was returned from render",
          "name": "A",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 3,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App2",
      "status": "WRITE-CONFLICTS",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple children 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "B",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "C",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with Object.assign #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with Object.assign #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with Object.assign #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with Object.assign #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with Object.assign 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with abstract props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with multiple JSX spreads #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with multiple JSX spreads #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with multiple JSX spreads #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with multiple JSX spreads #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with multiple JSX spreads #6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with multiple JSX spreads 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with new expression 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Functional component folding Simple with unary expressions 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "RENDER_PROPS",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "NORMAL",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props Relay QueryRenderer 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props Relay QueryRenderer 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output Render props Relay QueryRenderer 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SomeClassThatShouldNotMakeRootAClass",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks Function bind 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Middle",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks Hacker News app 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "HeaderBar",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "StoryList",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "AppBody",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "Hello",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "RelayContainer",
          "name": "WrappedApp",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 9,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 11 1`] = `
ReactStatistics {
  "componentsEvaluated": 13,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 9,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks fb-www 13 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, JSX output fb-www mocks repl example 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Foo",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Classes with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Complex class components folding into functional root component #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Complex class components folding into functional root component #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Complex class components folding into functional root component #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 12,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Complex class components folding into functional root component #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Complex class components folding into functional root component 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Inheritance chaining 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "MyComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Simple classes #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Simple classes #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Class component folding Simple classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Factory class component folding Simple factory classes 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "FactoryComponent",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Factory class component folding Simple factory classes 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "FactoryComponent",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "non-root factory class components are not suppoted",
          "name": "FactoryComponent",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output First render only Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "INLINED",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "INLINED",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 4,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only Replace this in callbacks 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only Replace this in callbacks 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only Simple #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only componentWillMount 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only getDerivedStateFromProps 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only getDerivedStateFromProps 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only getDerivedStateFromProps 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output First render only getDerivedStateFromProps 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "React.Fragment",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Child2",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child1",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding 16.3 refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding 16.3 refs 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding 16.3 refs 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "refs are not supported on <Components />",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "ClassComponent",
                  "status": "BAIL-OUT",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "",
          "status": "FORWARD_REF",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Additional functions closure scope capturing 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Circular reference 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Class component as root 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Class component as root with instance variables #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Class component as root with instance variables 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Class component as root with multiple render methods 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Class component as root with props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Class component as root with refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Class component as root with state 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SubChild",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Component type change 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Component type same 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Conditional 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "MaybeShow",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Delete element prop key 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Dynamic ReactElement type #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Dynamic ReactElement type 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Foo",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Dynamic context 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "SubChild",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Dynamic props 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Fn",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Event handlers 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Key change 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Key change with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Key nesting 1`] = `
ReactStatistics {
  "componentsEvaluated": 6,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "MessagePane",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "SettingsPane",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Key nesting 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Key nesting 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Key not changing with fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Stateful",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "Stateful",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding React.cloneElement 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "MaybeShow",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Override",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Render array twice 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Render nested array children 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Return text 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Return undefined 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "undefined was returned from render",
          "name": "A",
          "status": "BAIL-OUT",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "B",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "C",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [],
      "message": "",
      "name": "Child",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 3,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App2",
      "status": "WRITE-CONFLICTS",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple children 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple fragments 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "A",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "B",
              "status": "INLINED",
            },
            Object {
              "children": Array [],
              "message": "",
              "name": "C",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "React.Fragment",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple refs 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with Object.assign #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with Object.assign #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with Object.assign #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with Object.assign #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with Object.assign 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with abstract props 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "IWantThisToBeInlined",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Button",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with multiple JSX spreads #2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with multiple JSX spreads #3 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with multiple JSX spreads #4 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with multiple JSX spreads #5 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with multiple JSX spreads #6 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with multiple JSX spreads 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with new expression 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Functional component folding Simple with unary expressions 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props React Context 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props React Context 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props React Context 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props React Context 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "message": "",
                      "name": "Context.Consumer",
                      "status": "RENDER_PROPS",
                    },
                  ],
                  "message": "",
                  "name": "Child",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "Context.Provider",
              "status": "NORMAL",
            },
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props React Context 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 4,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "Context.Consumer",
                  "status": "RENDER_PROPS",
                },
              ],
              "message": "",
              "name": "Child",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Context.Provider",
          "status": "NORMAL",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Context.Consumer",
              "status": "RENDER_PROPS",
            },
          ],
          "message": "",
          "name": "Child",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 2,
  "optimizedNestedClosures": 2,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props Relay QueryRenderer 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props Relay QueryRenderer 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output Render props Relay QueryRenderer 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "SomeClassThatShouldNotMakeRootAClass",
              "status": "NEW_TREE",
            },
          ],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks Function bind 1`] = `
ReactStatistics {
  "componentsEvaluated": 2,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "Middle",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 1,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks Hacker News app 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "HeaderBar",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "StoryList",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "AppBody",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "",
          "name": "QueryRenderer",
          "status": "RENDER_PROPS",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 1,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 2 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "Hello",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 3 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 4 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 5 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 6 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 7 1`] = `
ReactStatistics {
  "componentsEvaluated": 1,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 8 1`] = `
ReactStatistics {
  "componentsEvaluated": 3,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "message": "RelayContainer",
          "name": "WrappedApp",
          "status": "NEW_TREE",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 2,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 9 1`] = `
ReactStatistics {
  "componentsEvaluated": 9,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 10 1`] = `
ReactStatistics {
  "componentsEvaluated": 5,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 3,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 11 1`] = `
ReactStatistics {
  "componentsEvaluated": 13,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "B",
                  "status": "INLINED",
                },
                Object {
                  "children": Array [],
                  "message": "",
                  "name": "C",
                  "status": "INLINED",
                },
              ],
              "message": "",
              "name": "React.Fragment",
              "status": "NORMAL",
            },
          ],
          "message": "",
          "name": "A",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "App",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 9,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks fb-www 13 1`] = `
ReactStatistics {
  "componentsEvaluated": 0,
  "evaluatedRootNodes": Array [],
  "inlinedComponents": 0,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 0,
}
`;

exports[`Test React with create-element input, create-element output fb-www mocks repl example 1`] = `
ReactStatistics {
  "componentsEvaluated": 7,
  "evaluatedRootNodes": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [],
              "message": "",
              "name": "Yar",
              "status": "INLINED",
            },
          ],
          "message": "",
          "name": "Bar",
          "status": "INLINED",
        },
      ],
      "message": "",
      "name": "Foo",
      "status": "ROOT",
    },
  ],
  "inlinedComponents": 6,
  "optimizedNestedClosures": 0,
  "optimizedTrees": 1,
}
`;
